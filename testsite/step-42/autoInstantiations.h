/*This file is part of SciPAL.

    SciPAL is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SciPAL is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with SciPAL.  If not, see <http://www.gnu.org/licenses/>.

Copyright  S. C. Kramer , J. Hagemann  2010 - 2014
*/


// The following 21 instantiations are automatically generated [2014-03-25 16:57:41.546270]:
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
// The following 21 instantiations are automatically generated [2014-03-25 16:59:37.796126]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > > const&);
// The following 1 instantiations are automatically generated [2014-04-01 10:32:42.271804]:
template void ImplCUDA<double>::apply<SciPAL::Literal<double>, SciPAL::Setter<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::Literal<double>, SciPAL::Setter<double> > const&);
// The following 1 instantiations are automatically generated [2014-04-02 17:48:32.171900]:
template void ImplOpenMP<double>::apply<SciPAL::Literal<double>, SciPAL::Setter<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::Literal<double>, SciPAL::Setter<double> > const&);
// Manually added [2015-03-13 01:28]
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
// The following 7 instantiations are automatically generated [2015-04-01 17:05:02.925174]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> >, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> >, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
// The following 1 instantiations are automatically generated [2015-04-02 10:54:39.902694]:
template void ImplCUDA<double>::apply<SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >, SciPAL::expr_sqrt<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >, SciPAL::expr_sqrt<double> > const&);
// The following 1 instantiations are automatically generated [2015-04-02 10:56:14.695480]:
template void ImplCUDA<double>::apply<SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_cos<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_cos<double> >, SciPAL::expr_abs<double> > const&);
// The following 1 instantiations are automatically generated [2015-04-02 11:14:23.508559]:
template void ImplCUDA<double>::apply<SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> >, SciPAL::plus, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> >, SciPAL::plus, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > > const&);
