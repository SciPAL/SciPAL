// The following 27 instantiations are automatically generated [2015-08-03 15:40:23.447387]:
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::Literal<double>, SciPAL::Setter<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::Literal<double>, SciPAL::Setter<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> > const&);
template void ImplCUDA<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > > const&);
// The following 1 instantiations are automatically generated [2015-08-10 15:39:44.972497]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
// The following 1 instantiations are automatically generated [2015-08-11 11:43:20.347728]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > > const&);
// The following 1 instantiations are automatically generated [2015-08-11 11:46:36.221293]:
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
// The following 2 instantiations are automatically generated [2015-08-11 11:48:45.826119]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > > const&);
template void ImplCUDA<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
// The following 30 instantiations are automatically generated [2015-08-11 13:58:23.707975]:
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pdivide, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::minus, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_exp<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::pmult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::pdivide, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::minus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_abs<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::Literal<double>, SciPAL::Setter<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::Literal<double>, SciPAL::Setter<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_abs<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sqrt<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<SciPAL::CudaComplex<double> >, SciPAL::mult, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::ShapeData<double> >, SciPAL::pdivide, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::expr_sin<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sin<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::pmult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::ShapeData<double> > const&);
template void ImplOpenMP<double>::apply<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> >, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::DevLiteral<double>, SciPAL::mult, SciPAL::ShapeData<double> > >, SciPAL::expr_sin<double> > const&);
template void ImplOpenMP<SciPAL::CudaComplex<double> >::apply<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > >(SciPAL::ShapeData<SciPAL::CudaComplex<double> >&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<SciPAL::CudaComplex<double> >, SciPAL::plus, SciPAL::ShapeData<SciPAL::CudaComplex<double> > > const&);
template void ImplOpenMP<double>::apply<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> >(SciPAL::ShapeData<double>&, SciPAL::DevUnaryExpr<SciPAL::ShapeData<double>, SciPAL::expr_sqrt<double> > const&);
// The following 1 instantiations are automatically generated [2015-08-11 16:38:24.022935]:
template void ImplCUDA<double>::apply<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::mult, SciPAL::ShapeData<double> > >(SciPAL::ShapeData<double>&, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::plus, SciPAL::DevBinaryExpr<SciPAL::ShapeData<double>, SciPAL::mult, SciPAL::ShapeData<double> > > const&);
